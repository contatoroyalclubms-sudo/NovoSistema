"""Create all tables - final

Revision ID: 2f92f2f1a3b2
Revises: 
Create Date: 2025-08-22 05:22:02.143805

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2f92f2f1a3b2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('configuracoes_sistema',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('chave', sa.String(length=100), nullable=False),
    sa.Column('valor', sa.JSON(), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('categoria', sa.String(length=50), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chave')
    )
    op.create_index('idx_config_categoria', 'configuracoes_sistema', ['categoria'], unique=False)
    op.create_index('idx_config_chave', 'configuracoes_sistema', ['chave'], unique=False)
    op.create_table('conquistas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=False),
    sa.Column('categoria', sa.String(length=50), nullable=False),
    sa.Column('dificuldade', sa.String(length=20), nullable=True),
    sa.Column('criterios', sa.JSON(), nullable=False),
    sa.Column('pontos_recompensa', sa.Integer(), nullable=True),
    sa.Column('icone_url', sa.String(length=500), nullable=True),
    sa.Column('cor', sa.String(length=7), nullable=True),
    sa.Column('ativa', sa.Boolean(), nullable=True),
    sa.Column('global_conquista', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuarios',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('telefone', sa.String(length=20), nullable=True),
    sa.Column('senha_hash', sa.String(length=255), nullable=False),
    sa.Column('tipo_usuario', sa.Enum('ADMIN', 'ORGANIZADOR', 'OPERADOR', 'PARTICIPANTE', name='tipousuario'), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('foto_perfil', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('data_nascimento', sa.DateTime(), nullable=True),
    sa.Column('cpf', sa.String(length=14), nullable=True),
    sa.Column('empresa_id', sa.UUID(), nullable=True),
    sa.Column('endereco', sa.JSON(), nullable=True),
    sa.Column('configuracoes', sa.JSON(), nullable=True),
    sa.Column('ultimo_login', sa.DateTime(), nullable=True),
    sa.Column('token_reset_senha', sa.String(length=255), nullable=True),
    sa.Column('token_verificacao', sa.String(length=255), nullable=True),
    sa.Column('email_verificado', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpf')
    )
    op.create_index('idx_usuario_ativo', 'usuarios', ['ativo'], unique=False)
    op.create_index('idx_usuario_email', 'usuarios', ['email'], unique=False)
    op.create_index('idx_usuario_tipo', 'usuarios', ['tipo_usuario'], unique=False)
    op.create_index(op.f('ix_usuarios_email'), 'usuarios', ['email'], unique=True)
    op.create_table('categorias',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('empresa_id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('cor', sa.String(length=7), nullable=True),
    sa.Column('icone', sa.String(length=50), nullable=True),
    sa.Column('ativa', sa.Boolean(), nullable=True),
    sa.Column('ordem', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['usuarios.empresa_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_categoria_ativa', 'categorias', ['ativa'], unique=False)
    op.create_index('idx_categoria_empresa', 'categorias', ['empresa_id'], unique=False)
    op.create_table('eventos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(length=200), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('tipo_evento', sa.Enum('FESTA', 'SHOW', 'CONFERENCIA', 'WORKSHOP', 'NETWORKING', 'CORPORATIVO', 'CASAMENTO', 'ANIVERSARIO', 'OUTRO', name='tipoevento'), nullable=False),
    sa.Column('status', sa.Enum('PLANEJAMENTO', 'ATIVO', 'PAUSADO', 'FINALIZADO', 'CANCELADO', name='statusevento'), nullable=True),
    sa.Column('data_inicio', sa.DateTime(), nullable=False),
    sa.Column('data_fim', sa.DateTime(), nullable=False),
    sa.Column('data_inicio_checkin', sa.DateTime(), nullable=True),
    sa.Column('data_fim_checkin', sa.DateTime(), nullable=True),
    sa.Column('local_nome', sa.String(length=200), nullable=False),
    sa.Column('local_endereco', sa.String(length=500), nullable=False),
    sa.Column('local_coordenadas', sa.JSON(), nullable=True),
    sa.Column('capacidade_maxima', sa.Integer(), nullable=True),
    sa.Column('cor_primaria', sa.String(length=7), nullable=True),
    sa.Column('cor_secundaria', sa.String(length=7), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('banner_url', sa.String(length=500), nullable=True),
    sa.Column('template_layout', sa.String(length=50), nullable=True),
    sa.Column('permite_checkin_antecipado', sa.Boolean(), nullable=True),
    sa.Column('requer_confirmacao', sa.Boolean(), nullable=True),
    sa.Column('limite_participantes', sa.Integer(), nullable=True),
    sa.Column('valor_entrada', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('moeda', sa.String(length=3), nullable=True),
    sa.Column('sistema_pontuacao_ativo', sa.Boolean(), nullable=True),
    sa.Column('pontos_checkin', sa.Integer(), nullable=True),
    sa.Column('pontos_participacao', sa.Integer(), nullable=True),
    sa.Column('qr_code_checkin', sa.String(length=500), nullable=True),
    sa.Column('qr_code_data', sa.JSON(), nullable=True),
    sa.Column('organizador_id', sa.UUID(), nullable=False),
    sa.Column('equipe_organizacao', sa.JSON(), nullable=True),
    sa.Column('webhook_checkin', sa.String(length=500), nullable=True),
    sa.Column('email_confirmacao_template', sa.Text(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('configuracoes_extras', sa.JSON(), nullable=True),
    sa.Column('notas_internas', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organizador_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_evento_data_inicio', 'eventos', ['data_inicio'], unique=False)
    op.create_index('idx_evento_organizador', 'eventos', ['organizador_id'], unique=False)
    op.create_index('idx_evento_status', 'eventos', ['status'], unique=False)
    op.create_index('idx_evento_tipo', 'eventos', ['tipo_evento'], unique=False)
    op.create_table('payment_links',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('url_hash', sa.String(length=32), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('min_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('max_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('payment_type', sa.Enum('SINGLE', 'RECURRING', 'FLEXIBLE', name='tipopagamentolink'), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'EXPIRED', 'COMPLETED', name='statuslink'), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('max_uses', sa.Integer(), nullable=True),
    sa.Column('theme', sa.String(length=20), nullable=True),
    sa.Column('custom_css', sa.Text(), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('success_url', sa.String(length=500), nullable=True),
    sa.Column('cancel_url', sa.String(length=500), nullable=True),
    sa.Column('enable_split', sa.Boolean(), nullable=True),
    sa.Column('split_recipients', sa.JSON(), nullable=True),
    sa.Column('collect_customer_info', sa.Boolean(), nullable=True),
    sa.Column('send_receipt', sa.Boolean(), nullable=True),
    sa.Column('allow_installments', sa.Boolean(), nullable=True),
    sa.Column('webhook_url', sa.String(length=500), nullable=True),
    sa.Column('uses_count', sa.Integer(), nullable=True),
    sa.Column('views_count', sa.Integer(), nullable=True),
    sa.Column('total_collected', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('link_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_payment_link_created', 'payment_links', ['created_at'], unique=False)
    op.create_index('idx_payment_link_expires', 'payment_links', ['expires_at'], unique=False)
    op.create_index('idx_payment_link_hash', 'payment_links', ['url_hash'], unique=False)
    op.create_index('idx_payment_link_status', 'payment_links', ['status'], unique=False)
    op.create_index('idx_payment_link_type', 'payment_links', ['payment_type'], unique=False)
    op.create_index('idx_payment_link_user', 'payment_links', ['user_id'], unique=False)
    op.create_index(op.f('ix_payment_links_url_hash'), 'payment_links', ['url_hash'], unique=True)
    op.create_table('promoter_conquistas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('usuario_id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=False),
    sa.Column('tipo', sa.String(length=50), nullable=False),
    sa.Column('nivel', sa.String(length=20), nullable=True),
    sa.Column('meta_valor', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('meta_quantidade', sa.Integer(), nullable=True),
    sa.Column('valor_atual', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('quantidade_atual', sa.Integer(), nullable=True),
    sa.Column('progresso_percentual', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('desbloqueada', sa.Boolean(), nullable=True),
    sa.Column('data_desbloqueio', sa.DateTime(), nullable=True),
    sa.Column('pontos_xp', sa.Integer(), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.Column('atualizado_em', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_conquista_nivel', 'promoter_conquistas', ['nivel'], unique=False)
    op.create_index('idx_conquista_tipo', 'promoter_conquistas', ['tipo'], unique=False)
    op.create_index('idx_conquista_usuario', 'promoter_conquistas', ['usuario_id'], unique=False)
    op.create_table('ranking_gamificacao',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('usuario_id', sa.UUID(), nullable=False),
    sa.Column('empresa_id', sa.UUID(), nullable=False),
    sa.Column('xp_total', sa.Integer(), nullable=True),
    sa.Column('vendas_total', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('vendas_mes_atual', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('vendas_mes_anterior', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('posicao_geral', sa.Integer(), nullable=True),
    sa.Column('posicao_empresa', sa.Integer(), nullable=True),
    sa.Column('badge_atual', sa.String(length=50), nullable=True),
    sa.Column('nivel_atual', sa.Integer(), nullable=True),
    sa.Column('crescimento_percentual', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('streak_vendas', sa.Integer(), nullable=True),
    sa.Column('mes_referencia', sa.String(length=7), nullable=False),
    sa.Column('ultima_atualizacao', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['usuarios.empresa_id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ranking_empresa', 'ranking_gamificacao', ['empresa_id'], unique=False)
    op.create_index('idx_ranking_mes', 'ranking_gamificacao', ['mes_referencia'], unique=False)
    op.create_index('idx_ranking_unico', 'ranking_gamificacao', ['usuario_id', 'mes_referencia'], unique=True)
    op.create_index('idx_ranking_usuario', 'ranking_gamificacao', ['usuario_id'], unique=False)
    op.create_index('idx_ranking_xp', 'ranking_gamificacao', ['xp_total'], unique=False)
    op.create_table('logs_auditoria',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('usuario_id', sa.UUID(), nullable=True),
    sa.Column('evento_id', sa.UUID(), nullable=True),
    sa.Column('acao', sa.String(length=50), nullable=False),
    sa.Column('entidade', sa.String(length=50), nullable=False),
    sa.Column('entidade_id', sa.String(length=100), nullable=True),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('dados_anteriores', sa.JSON(), nullable=True),
    sa.Column('dados_novos', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('dispositivo', sa.String(length=100), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evento_id'], ['eventos.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_auditoria_acao', 'logs_auditoria', ['acao'], unique=False)
    op.create_index('idx_auditoria_evento', 'logs_auditoria', ['evento_id'], unique=False)
    op.create_index('idx_auditoria_timestamp', 'logs_auditoria', ['timestamp'], unique=False)
    op.create_index('idx_auditoria_usuario', 'logs_auditoria', ['usuario_id'], unique=False)
    op.create_table('participantes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('usuario_id', sa.UUID(), nullable=False),
    sa.Column('evento_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('CONFIRMADO', 'PRESENTE', 'AUSENTE', 'CANCELADO', name='statusparticipante'), nullable=True),
    sa.Column('data_inscricao', sa.DateTime(), nullable=True),
    sa.Column('data_checkin', sa.DateTime(), nullable=True),
    sa.Column('data_checkout', sa.DateTime(), nullable=True),
    sa.Column('qr_code_individual', sa.String(length=500), nullable=True),
    sa.Column('qr_code_data', sa.JSON(), nullable=True),
    sa.Column('valor_pago', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('forma_pagamento', sa.Enum('DINHEIRO', 'PIX', 'CARTAO_CREDITO', 'CARTAO_DEBITO', 'TRANSFERENCIA', name='tipopagamento'), nullable=True),
    sa.Column('data_pagamento', sa.DateTime(), nullable=True),
    sa.Column('comprovante_pagamento', sa.String(length=500), nullable=True),
    sa.Column('dados_adicionais', sa.JSON(), nullable=True),
    sa.Column('preferencias_alimentares', sa.String(length=500), nullable=True),
    sa.Column('necessidades_especiais', sa.String(length=500), nullable=True),
    sa.Column('pontos_obtidos', sa.Integer(), nullable=True),
    sa.Column('badges_conquistadas', sa.JSON(), nullable=True),
    sa.Column('tempo_permanencia', sa.Integer(), nullable=True),
    sa.Column('areas_visitadas', sa.JSON(), nullable=True),
    sa.Column('avaliacao_evento', sa.Integer(), nullable=True),
    sa.Column('comentario_evento', sa.Text(), nullable=True),
    sa.Column('data_avaliacao', sa.DateTime(), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evento_id'], ['eventos.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_participante_checkin', 'participantes', ['data_checkin'], unique=False)
    op.create_index('idx_participante_evento', 'participantes', ['evento_id'], unique=False)
    op.create_index('idx_participante_status', 'participantes', ['status'], unique=False)
    op.create_index('idx_participante_unico', 'participantes', ['usuario_id', 'evento_id'], unique=True)
    op.create_index('idx_participante_usuario', 'participantes', ['usuario_id'], unique=False)
    op.create_table('payment_attempts',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('link_id', sa.String(length=36), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('customer_name', sa.String(length=200), nullable=True),
    sa.Column('customer_email', sa.String(length=255), nullable=True),
    sa.Column('customer_phone', sa.String(length=20), nullable=True),
    sa.Column('customer_document', sa.String(length=20), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.Column('gateway_response', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REFUNDED', name='statuspagamentolink'), nullable=True),
    sa.Column('failure_reason', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['link_id'], ['payment_links.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_payment_attempt_created', 'payment_attempts', ['created_at'], unique=False)
    op.create_index('idx_payment_attempt_email', 'payment_attempts', ['customer_email'], unique=False)
    op.create_index('idx_payment_attempt_link', 'payment_attempts', ['link_id'], unique=False)
    op.create_index('idx_payment_attempt_status', 'payment_attempts', ['status'], unique=False)
    op.create_index('idx_payment_attempt_transaction', 'payment_attempts', ['transaction_id'], unique=False)
    op.create_table('payment_link_analytics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('link_id', sa.String(length=36), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.Column('successful_payments', sa.Integer(), nullable=True),
    sa.Column('failed_payments', sa.Integer(), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('average_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('payment_methods_breakdown', sa.JSON(), nullable=True),
    sa.Column('countries', sa.JSON(), nullable=True),
    sa.Column('cities', sa.JSON(), nullable=True),
    sa.Column('devices', sa.JSON(), nullable=True),
    sa.Column('browsers', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['link_id'], ['payment_links.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_analytics_date', 'payment_link_analytics', ['date'], unique=False)
    op.create_index('idx_analytics_link_date', 'payment_link_analytics', ['link_id', 'date'], unique=True)
    op.create_table('pontuacoes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('usuario_id', sa.UUID(), nullable=False),
    sa.Column('evento_id', sa.UUID(), nullable=False),
    sa.Column('pontos_checkin', sa.Integer(), nullable=True),
    sa.Column('pontos_participacao', sa.Integer(), nullable=True),
    sa.Column('pontos_compras', sa.Integer(), nullable=True),
    sa.Column('pontos_bonus', sa.Integer(), nullable=True),
    sa.Column('pontos_total', sa.Integer(), nullable=True),
    sa.Column('posicao_ranking', sa.Integer(), nullable=True),
    sa.Column('categoria_ranking', sa.String(length=20), nullable=True),
    sa.Column('conquistas_desbloqueadas', sa.JSON(), nullable=True),
    sa.Column('data_ultima_conquista', sa.DateTime(), nullable=True),
    sa.Column('historico_pontos', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evento_id'], ['eventos.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pontuacao_evento', 'pontuacoes', ['evento_id'], unique=False)
    op.create_index('idx_pontuacao_total', 'pontuacoes', ['pontos_total'], unique=False)
    op.create_index('idx_pontuacao_unica', 'pontuacoes', ['usuario_id', 'evento_id'], unique=True)
    op.create_index('idx_pontuacao_usuario', 'pontuacoes', ['usuario_id'], unique=False)
    op.create_table('produtos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('evento_id', sa.UUID(), nullable=False),
    sa.Column('empresa_id', sa.UUID(), nullable=False),
    sa.Column('categoria_id', sa.UUID(), nullable=True),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('codigo', sa.String(length=50), nullable=True),
    sa.Column('codigo_barras', sa.String(length=50), nullable=True),
    sa.Column('sku', sa.String(length=50), nullable=True),
    sa.Column('preco_venda', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('preco_custo', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('margem_lucro', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('quantidade_estoque', sa.Integer(), nullable=True),
    sa.Column('estoque_inicial', sa.Integer(), nullable=True),
    sa.Column('estoque_minimo', sa.Integer(), nullable=True),
    sa.Column('estoque_maximo', sa.Integer(), nullable=True),
    sa.Column('permite_venda_sem_estoque', sa.Boolean(), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('destaque', sa.Boolean(), nullable=True),
    sa.Column('permite_desconto', sa.Boolean(), nullable=True),
    sa.Column('requer_idade_minima', sa.Integer(), nullable=True),
    sa.Column('imagem_url', sa.String(length=500), nullable=True),
    sa.Column('imagens_extras', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('configuracoes', sa.JSON(), nullable=True),
    sa.Column('atualizado_em', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.id'], ),
    sa.ForeignKeyConstraint(['empresa_id'], ['usuarios.empresa_id'], ),
    sa.ForeignKeyConstraint(['evento_id'], ['eventos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('codigo'),
    sa.UniqueConstraint('codigo_barras')
    )
    op.create_index('idx_produto_ativo', 'produtos', ['ativo'], unique=False)
    op.create_index('idx_produto_categoria', 'produtos', ['categoria_id'], unique=False)
    op.create_index('idx_produto_evento', 'produtos', ['evento_id'], unique=False)
    op.create_table('vendas_pdv',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('evento_id', sa.UUID(), nullable=False),
    sa.Column('usuario_vendedor_id', sa.UUID(), nullable=False),
    sa.Column('numero_venda', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('valor_bruto', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('valor_desconto', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('valor_liquido', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('forma_pagamento', sa.Enum('DINHEIRO', 'PIX', 'CARTAO_CREDITO', 'CARTAO_DEBITO', 'TRANSFERENCIA', name='tipopagamento'), nullable=False),
    sa.Column('valor_pago', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('valor_troco', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.Column('aprovado_em', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evento_id'], ['eventos.id'], ),
    sa.ForeignKeyConstraint(['usuario_vendedor_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero_venda')
    )
    op.create_index('idx_venda_data', 'vendas_pdv', ['criado_em'], unique=False)
    op.create_index('idx_venda_evento', 'vendas_pdv', ['evento_id'], unique=False)
    op.create_index('idx_venda_status', 'vendas_pdv', ['status'], unique=False)
    op.create_index('idx_venda_vendedor', 'vendas_pdv', ['usuario_vendedor_id'], unique=False)
    op.create_table('itens_venda_pdv',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('venda_id', sa.UUID(), nullable=False),
    sa.Column('produto_id', sa.UUID(), nullable=False),
    sa.Column('quantidade', sa.Integer(), nullable=False),
    sa.Column('preco_unitario', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('desconto_unitario', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('preco_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['produto_id'], ['produtos.id'], ),
    sa.ForeignKeyConstraint(['venda_id'], ['vendas_pdv.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_item_venda', 'itens_venda_pdv', ['venda_id'], unique=False)
    op.create_index('idx_item_venda_produto', 'itens_venda_pdv', ['produto_id'], unique=False)
    op.create_table('transacoes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('evento_id', sa.UUID(), nullable=False),
    sa.Column('usuario_id', sa.UUID(), nullable=True),
    sa.Column('participante_id', sa.UUID(), nullable=True),
    sa.Column('numero_transacao', sa.String(length=50), nullable=False),
    sa.Column('tipo_transacao', sa.String(length=20), nullable=False),
    sa.Column('status', sa.Enum('PENDENTE', 'APROVADA', 'REJEITADA', 'CANCELADA', 'ESTORNADA', name='statustransacao'), nullable=True),
    sa.Column('valor_bruto', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('valor_desconto', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('valor_taxa', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('valor_liquido', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('moeda', sa.String(length=3), nullable=True),
    sa.Column('forma_pagamento', sa.Enum('DINHEIRO', 'PIX', 'CARTAO_CREDITO', 'CARTAO_DEBITO', 'TRANSFERENCIA', name='tipopagamento'), nullable=False),
    sa.Column('parcelas', sa.Integer(), nullable=True),
    sa.Column('valor_parcela', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('gateway_transacao_id', sa.String(length=100), nullable=True),
    sa.Column('gateway_resposta', sa.JSON(), nullable=True),
    sa.Column('comprovante_url', sa.String(length=500), nullable=True),
    sa.Column('data_transacao', sa.DateTime(), nullable=True),
    sa.Column('data_processamento', sa.DateTime(), nullable=True),
    sa.Column('data_confirmacao', sa.DateTime(), nullable=True),
    sa.Column('data_cancelamento', sa.DateTime(), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('metadados', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evento_id'], ['eventos.id'], ),
    sa.ForeignKeyConstraint(['participante_id'], ['participantes.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero_transacao')
    )
    op.create_index('idx_transacao_data', 'transacoes', ['data_transacao'], unique=False)
    op.create_index('idx_transacao_evento', 'transacoes', ['evento_id'], unique=False)
    op.create_index('idx_transacao_numero', 'transacoes', ['numero_transacao'], unique=False)
    op.create_index('idx_transacao_status', 'transacoes', ['status'], unique=False)
    op.create_index('idx_transacao_usuario', 'transacoes', ['usuario_id'], unique=False)
    op.create_table('itens_transacao',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('transacao_id', sa.UUID(), nullable=False),
    sa.Column('produto_id', sa.UUID(), nullable=False),
    sa.Column('quantidade', sa.Integer(), nullable=False),
    sa.Column('preco_unitario', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('desconto_unitario', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('preco_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('observacoes', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['produto_id'], ['produtos.id'], ),
    sa.ForeignKeyConstraint(['transacao_id'], ['transacoes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_item_produto', 'itens_transacao', ['produto_id'], unique=False)
    op.create_index('idx_item_transacao', 'itens_transacao', ['transacao_id'], unique=False)
    op.create_table('movimentos_estoque',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('produto_id', sa.UUID(), nullable=False),
    sa.Column('usuario_id', sa.UUID(), nullable=False),
    sa.Column('venda_id', sa.UUID(), nullable=True),
    sa.Column('tipo_movimento', sa.String(length=20), nullable=False),
    sa.Column('quantidade', sa.Integer(), nullable=False),
    sa.Column('estoque_anterior', sa.Integer(), nullable=False),
    sa.Column('estoque_atual', sa.Integer(), nullable=False),
    sa.Column('motivo', sa.String(length=200), nullable=False),
    sa.Column('valor_unitario', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('valor_total', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('documento_referencia', sa.String(length=100), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['produto_id'], ['produtos.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['venda_id'], ['transacoes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_movimento_data', 'movimentos_estoque', ['criado_em'], unique=False)
    op.create_index('idx_movimento_produto', 'movimentos_estoque', ['produto_id'], unique=False)
    op.create_index('idx_movimento_tipo', 'movimentos_estoque', ['tipo_movimento'], unique=False)
    op.create_index('idx_movimento_usuario', 'movimentos_estoque', ['usuario_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_movimento_usuario', table_name='movimentos_estoque')
    op.drop_index('idx_movimento_tipo', table_name='movimentos_estoque')
    op.drop_index('idx_movimento_produto', table_name='movimentos_estoque')
    op.drop_index('idx_movimento_data', table_name='movimentos_estoque')
    op.drop_table('movimentos_estoque')
    op.drop_index('idx_item_transacao', table_name='itens_transacao')
    op.drop_index('idx_item_produto', table_name='itens_transacao')
    op.drop_table('itens_transacao')
    op.drop_index('idx_transacao_usuario', table_name='transacoes')
    op.drop_index('idx_transacao_status', table_name='transacoes')
    op.drop_index('idx_transacao_numero', table_name='transacoes')
    op.drop_index('idx_transacao_evento', table_name='transacoes')
    op.drop_index('idx_transacao_data', table_name='transacoes')
    op.drop_table('transacoes')
    op.drop_index('idx_item_venda_produto', table_name='itens_venda_pdv')
    op.drop_index('idx_item_venda', table_name='itens_venda_pdv')
    op.drop_table('itens_venda_pdv')
    op.drop_index('idx_venda_vendedor', table_name='vendas_pdv')
    op.drop_index('idx_venda_status', table_name='vendas_pdv')
    op.drop_index('idx_venda_evento', table_name='vendas_pdv')
    op.drop_index('idx_venda_data', table_name='vendas_pdv')
    op.drop_table('vendas_pdv')
    op.drop_index('idx_produto_evento', table_name='produtos')
    op.drop_index('idx_produto_categoria', table_name='produtos')
    op.drop_index('idx_produto_ativo', table_name='produtos')
    op.drop_table('produtos')
    op.drop_index('idx_pontuacao_usuario', table_name='pontuacoes')
    op.drop_index('idx_pontuacao_unica', table_name='pontuacoes')
    op.drop_index('idx_pontuacao_total', table_name='pontuacoes')
    op.drop_index('idx_pontuacao_evento', table_name='pontuacoes')
    op.drop_table('pontuacoes')
    op.drop_index('idx_analytics_link_date', table_name='payment_link_analytics')
    op.drop_index('idx_analytics_date', table_name='payment_link_analytics')
    op.drop_table('payment_link_analytics')
    op.drop_index('idx_payment_attempt_transaction', table_name='payment_attempts')
    op.drop_index('idx_payment_attempt_status', table_name='payment_attempts')
    op.drop_index('idx_payment_attempt_link', table_name='payment_attempts')
    op.drop_index('idx_payment_attempt_email', table_name='payment_attempts')
    op.drop_index('idx_payment_attempt_created', table_name='payment_attempts')
    op.drop_table('payment_attempts')
    op.drop_index('idx_participante_usuario', table_name='participantes')
    op.drop_index('idx_participante_unico', table_name='participantes')
    op.drop_index('idx_participante_status', table_name='participantes')
    op.drop_index('idx_participante_evento', table_name='participantes')
    op.drop_index('idx_participante_checkin', table_name='participantes')
    op.drop_table('participantes')
    op.drop_index('idx_auditoria_usuario', table_name='logs_auditoria')
    op.drop_index('idx_auditoria_timestamp', table_name='logs_auditoria')
    op.drop_index('idx_auditoria_evento', table_name='logs_auditoria')
    op.drop_index('idx_auditoria_acao', table_name='logs_auditoria')
    op.drop_table('logs_auditoria')
    op.drop_index('idx_ranking_xp', table_name='ranking_gamificacao')
    op.drop_index('idx_ranking_usuario', table_name='ranking_gamificacao')
    op.drop_index('idx_ranking_unico', table_name='ranking_gamificacao')
    op.drop_index('idx_ranking_mes', table_name='ranking_gamificacao')
    op.drop_index('idx_ranking_empresa', table_name='ranking_gamificacao')
    op.drop_table('ranking_gamificacao')
    op.drop_index('idx_conquista_usuario', table_name='promoter_conquistas')
    op.drop_index('idx_conquista_tipo', table_name='promoter_conquistas')
    op.drop_index('idx_conquista_nivel', table_name='promoter_conquistas')
    op.drop_table('promoter_conquistas')
    op.drop_index(op.f('ix_payment_links_url_hash'), table_name='payment_links')
    op.drop_index('idx_payment_link_user', table_name='payment_links')
    op.drop_index('idx_payment_link_type', table_name='payment_links')
    op.drop_index('idx_payment_link_status', table_name='payment_links')
    op.drop_index('idx_payment_link_hash', table_name='payment_links')
    op.drop_index('idx_payment_link_expires', table_name='payment_links')
    op.drop_index('idx_payment_link_created', table_name='payment_links')
    op.drop_table('payment_links')
    op.drop_index('idx_evento_tipo', table_name='eventos')
    op.drop_index('idx_evento_status', table_name='eventos')
    op.drop_index('idx_evento_organizador', table_name='eventos')
    op.drop_index('idx_evento_data_inicio', table_name='eventos')
    op.drop_table('eventos')
    op.drop_index('idx_categoria_empresa', table_name='categorias')
    op.drop_index('idx_categoria_ativa', table_name='categorias')
    op.drop_table('categorias')
    op.drop_index(op.f('ix_usuarios_email'), table_name='usuarios')
    op.drop_index('idx_usuario_tipo', table_name='usuarios')
    op.drop_index('idx_usuario_email', table_name='usuarios')
    op.drop_index('idx_usuario_ativo', table_name='usuarios')
    op.drop_table('usuarios')
    op.drop_table('conquistas')
    op.drop_index('idx_config_chave', table_name='configuracoes_sistema')
    op.drop_index('idx_config_categoria', table_name='configuracoes_sistema')
    op.drop_table('configuracoes_sistema')
    # ### end Alembic commands ###
